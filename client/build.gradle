plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    // Libraries
    compileOnly("com.github.FiguraMC.luaj:luaj-core:$luaj-figura")
    compileOnly("com.github.FiguraMC.luaj:luaj-jse:$luaj-figura")
    compileOnly("com.neovisionaries:nv-websocket-client:$nv_websocket")

    modCompileOnly("org.figuramc:figura-common-intermediary:$figura_version")

    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

    implementation(project(path: ":common"))
    shadowCommon(project(path: ":common")) { transitive false }
}

jar {
    from("LICENSE") {
        rename { String.valueOf("$archives_base_name").toUpperCase() + "_${it}"}
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}